//push argument 1
@ARG
D=M
@1
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop pointer 1
@SP
D=M
D=D-1
M=D
A=M
D=M
@THAT
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop that 0
@SP
D=M-1
M=D
@THAT
D=M
@0
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop that 1
@SP
D=M-1
M=D
@THAT
D=M
@1
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//sub
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=A-D
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//pop argument 0
@SP
D=M-1
M=D
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//label
(MAIN_LOOP_START)
//push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//if
@SP
M=M-1
A=M
D=M
@COMPUTE_ELEMENT
D;JNE
//goto
@END_PROGRAM
0;JMP
//label
(COMPUTE_ELEMENT)
//push that 0
@THAT
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push that 1
@THAT
D=M
@1
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//pop that 2
@SP
D=M-1
M=D
@THAT
D=M
@2
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//push pointer 1
@THAT
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//pop pointer 1
@SP
D=M
D=D-1
M=D
A=M
D=M
@THAT
M=D
//push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//sub
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=A-D
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//pop argument 0
@SP
D=M-1
M=D
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//goto
@MAIN_LOOP_START
0;JMP
//label
(END_PROGRAM)
