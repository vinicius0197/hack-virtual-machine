//function
(SimpleFunction.test)
@2
D=A-1
(LOOP_SimpleFunction.test)
@SP
A=M
M=0
@SP
M=M+1
@LOOP_SimpleFunction.test
D=D-1
D;JGE
//push local 0
@LCL
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push local 1
@LCL
D=M
@1
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//not
@SP
A=M
A=A-1
D=!M
M=D
D=A+1
@SP
M=D
//push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//push argument 1
@ARG
D=M
@1
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//sub
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=A-D
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
// return
//getsendframe
@LCL
D=M
@endFrame
M=D
//getreturnaddr
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr
M=D
//popreturnvaluefromstack
@SP
M=M-1
A=M
D=M
//repositionthereturnvalueforthecaller
@ARG
A=M
M=D
//repositionSPofthecaller
@ARG
A=M
D=A+1
@SP
M=D
//restoresTHATofthecaller
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
//restoresTHISofthecaller
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//restoresARGofthecaller
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//restoresLCLofthecaller
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goestoreturnaddress
@retAddr
0;JMP
