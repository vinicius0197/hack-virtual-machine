//function
(Sys.init)
@0
D=A-1
@Sys.init$SETUP_END$0
D;JLT
(LOOP_Sys.init)
@SP
A=M
M=0
@SP
M=M+1
@LOOP_Sys.init
D=D-1
D;JGE
(Sys.init$SETUP_END$0)//push constant 4000
@4000
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop pointer 0
@SP
D=M
D=D-1
M=D
A=M
D=M
@THIS
M=D
//push constant 5000
@5000
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop pointer 1
@SP
D=M
D=D-1
M=D
A=M
D=M
@THAT
M=D
// call
@Sys.main$returnAddr
D=A
@SP
M=M+1
A=M-1
M=D
//savesLCLofthecaller
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
//savesARGofthecaller
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
//savesTHISofthecaller
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//savesTHATofthecaller
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
//repositionARG
@SP
A=M
D=A
@5
D=D-A
@0
D=D-A
@ARG
M=D
//repositionLCL
@SP
D=M
@LCL
M=D
//transfercontroltothecalledfunction
@Sys.main
D;JMP
(Sys.main$returnAddr)
//pop temp 1
@SP
D=M-1
M=D
@5
D=A
@1
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//label
(LOOP)
//goto
@LOOP
0;JMP
//function
(Sys.main)
@5
D=A-1
@Sys.main$SETUP_END$1
D;JLT
(LOOP_Sys.main)
@SP
A=M
M=0
@SP
M=M+1
@LOOP_Sys.main
D=D-1
D;JGE
(Sys.main$SETUP_END$1)//push constant 4001
@4001
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop pointer 0
@SP
D=M
D=D-1
M=D
A=M
D=M
@THIS
M=D
//push constant 5001
@5001
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop pointer 1
@SP
D=M
D=D-1
M=D
A=M
D=M
@THAT
M=D
//push constant 200
@200
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop local 1
@SP
D=M-1
M=D
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//push constant 40
@40
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop local 2
@SP
D=M-1
M=D
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop local 3
@SP
D=M-1
M=D
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//push constant 123
@123
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
// call
@Sys.add12$returnAddr
D=A
@SP
M=M+1
A=M-1
M=D
//savesLCLofthecaller
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
//savesARGofthecaller
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
//savesTHISofthecaller
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//savesTHATofthecaller
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
//repositionARG
@SP
A=M
D=A
@5
D=D-A
@1
D=D-A
@ARG
M=D
//repositionLCL
@SP
D=M
@LCL
M=D
//transfercontroltothecalledfunction
@Sys.add12
D;JMP
(Sys.add12$returnAddr)
//pop temp 0
@SP
D=M-1
M=D
@5
D=A
@0
D=D+A
@R13
M=D
@SP
A=M
D=M
@R13
A=M
M=D
//push local 0
@LCL
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push local 1
@LCL
D=M
@1
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push local 2
@LCL
D=M
@2
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push local 3
@LCL
D=M
@3
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push local 4
@LCL
D=M
@4
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
// return
//getsendframe
@LCL
D=M
@endFrame
M=D
//getreturnaddr
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr$2
M=D
//popreturnvaluefromstack
@SP
M=M-1
A=M
D=M
//repositionthereturnvalueforthecaller
@ARG
A=M
M=D
//repositionSPofthecaller
@ARG
A=M
D=A+1
@SP
M=D
//restoresTHATofthecaller
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
//restoresTHISofthecaller
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//restoresARGofthecaller
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//restoresLCLofthecaller
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goestoreturnaddress
@retAddr$2
A=M
0;JMP
//function
(Sys.add12)
@0
D=A-1
@Sys.add12$SETUP_END$3
D;JLT
(LOOP_Sys.add12)
@SP
A=M
M=0
@SP
M=M+1
@LOOP_Sys.add12
D=D-1
D;JGE
(Sys.add12$SETUP_END$3)//push constant 4002
@4002
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop pointer 0
@SP
D=M
D=D-1
M=D
A=M
D=M
@THIS
M=D
//push constant 5002
@5002
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//pop pointer 1
@SP
D=M
D=D-1
M=D
A=M
D=M
@THAT
M=D
//push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
// return
//getsendframe
@LCL
D=M
@endFrame
M=D
//getreturnaddr
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr$4
M=D
//popreturnvaluefromstack
@SP
M=M-1
A=M
D=M
//repositionthereturnvalueforthecaller
@ARG
A=M
M=D
//repositionSPofthecaller
@ARG
A=M
D=A+1
@SP
M=D
//restoresTHATofthecaller
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
//restoresTHISofthecaller
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//restoresARGofthecaller
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//restoresLCLofthecaller
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goestoreturnaddress
@retAddr$4
A=M
0;JMP
