//push constant 500
@500
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
// call
@add300$returnAddr
D=A
@SP
M=M+1
A=M-1
M=D
//savesLCLofthecaller
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
//savesARGofthecaller
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
//savesTHISofthecaller
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//savesTHATofthecaller
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
//repositionARG
@SP
A=M
D=A
@5
D=D-A
@1
D=D-A
@ARG
M=D
//repositionLCL
@SP
D=M
@LCL
M=D
//transfercontroltothecalledfunction
@add300
D;JMP
(add300$returnAddr)
//label
(LOOP)
//goto
@LOOP
0;JMP
//function
(add300)
@2
D=A-1
(LOOP_add300)
@SP
A=M
M=0
@SP
M=M+1
@LOOP_add300
D=D-1
D;JGE
//push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push constant 300
@300
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
// call
@add15$returnAddr
D=A
@SP
M=M+1
A=M-1
M=D
//savesLCLofthecaller
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
//savesARGofthecaller
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
//savesTHISofthecaller
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
//savesTHATofthecaller
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
//repositionARG
@SP
A=M
D=A
@5
D=D-A
@1
D=D-A
@ARG
M=D
//repositionLCL
@SP
D=M
@LCL
M=D
//transfercontroltothecalledfunction
@add15
D;JMP
(add15$returnAddr)
// return
//getsendframe
@LCL
D=M
@endFrame
M=D
//getreturnaddr
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr$0
M=D
//popreturnvaluefromstack
@SP
M=M-1
A=M
D=M
//repositionthereturnvalueforthecaller
@ARG
A=M
M=D
//repositionSPofthecaller
@ARG
A=M
D=A+1
@SP
M=D
//restoresTHATofthecaller
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
//restoresTHISofthecaller
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//restoresARGofthecaller
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//restoresLCLofthecaller
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goestoreturnaddress
@retAddr$0
A=M
0;JMP
//function
(add15)
@1
D=A-1
(LOOP_add15)
@SP
A=M
M=0
@SP
M=M+1
@LOOP_add15
D=D-1
D;JGE
//push argument 0
@ARG
D=M
@0
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
D=M
D=D+1
M=D
//add
@SP
A=M
A=A-1
D=M
A=A-1
A=M
D=D+A
@SP
A=M
A=A-1
A=A-1
M=D
D=A+1
@SP
M=D
// return
//getsendframe
@LCL
D=M
@endFrame
M=D
//getreturnaddr
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr$1
M=D
//popreturnvaluefromstack
@SP
M=M-1
A=M
D=M
//repositionthereturnvalueforthecaller
@ARG
A=M
M=D
//repositionSPofthecaller
@ARG
A=M
D=A+1
@SP
M=D
//restoresTHATofthecaller
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
//restoresTHISofthecaller
@endFrame
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
//restoresARGofthecaller
@endFrame
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
//restoresLCLofthecaller
@endFrame
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
//goestoreturnaddress
@retAddr$1
A=M
0;JMP
